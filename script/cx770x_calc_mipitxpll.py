#!/usr/bin/env python3
#-*- coding:UTF-8 -*-

import sys
import math

dic_cm = {
    16:224,
    17:225,
    18:226,
    19:227,
    20:228,
    21:229,
    22:230,
    23:231,
    24:232,
    25:233,
    26:234,
    27:235,
    28:236,
    29:237,
    30:238,
    31:239,
    32:192,
    33:193,
    34:194,
    35:195,
    36:196,
    37:197,
    38:198,
    39:199,
    40:200,
    41:201,
    42:202,
    43:203,
    44:204,
    45:205,
    46:206,
    47:207,
    48:208,
    49:209,
    50:210,
    51:211,
    52:212,
    53:213,
    54:214,
    55:215,
    56:216,
    57:217,
    58:218,
    59:219,
    60:220,
    61:221,
    62:222,
    63:223,
    64:128,
    65:129,
    66:130,
    67:131,
    68:132,
    69:133,
    70:134,
    71:135,
    72:136,
    73:137,
    74:138,
    75:139,
    76:140,
    77:141,
    78:142,
    79:143,
    80:144,
    81:145,
    82:146,
    83:147,
    84:148,
    85:149,
    86:150,
    87:151,
    88:152,
    89:153,
    90:154,
    91:155,
    92:156,
    93:157,
    94:158,
    95:159,
    96:160,
    97:161,
    98:162,
    99:163,
    100:164,
    101:165,
    102:166,
    103:167,
    104:168,
    105:169,
    106:170,
    107:171,
    108:172,
    109:173,
    110:174,
    111:175,
    112:176,
    113:177,
    114:178,
    115:179,
    116:180,
    117:181,
    118:182,
    119:183,
    120:184,
    121:185,
    122:186,
    123:187,
    124:188,
    125:189,
    126:190,
    127:191,
    128:0,
    129:1,
    130:2,
    131:3,
    132:4,
    133:5,
    134:6,
    135:7,
    136:8,
    137:9,
    138:10,
    139:11,
    140:12,
    141:13,
    142:14,
    143:15,
    144:16,
    145:17,
    146:18,
    147:19,
    148:20,
    149:21,
    150:22,
    151:23,
    152:24,
    153:25,
    154:26,
    155:27,
    156:28,
    157:29,
    158:30,
    159:31,
    160:32,
    161:33,
    162:34,
    163:35,
    164:36,
    165:37,
    166:38,
    167:39,
    168:40,
    169:41,
    170:42,
    171:43,
    172:44,
    173:45,
    174:46,
    175:47,
    176:48,
    177:49,
    178:50,
    179:51,
    180:52,
    181:53,
    182:54,
    183:55,
    184:56,
    185:57,
    186:58,
    187:59,
    188:60,
    189:61,
    190:62,
    191:63,
    192:64,
    193:65,
    194:66,
    195:67,
    196:68,
    197:69,
    198:70,
    199:71,
    200:72,
    201:73,
    202:74,
    203:75,
    204:76,
    205:77,
    206:78,
    207:79,
    208:80,
    209:81,
    210:82,
    211:83,
    212:84,
    213:85,
    214:86,
    215:87,
    216:88,
    217:89,
    218:90,
    219:91,
    220:92,
    221:93,
    222:94,
    223:95,
    224:96,
    225:97,
    226:98,
    227:99,
    228:100,
    229:101,
    230:102,
    231:103,
    232:104,
    233:105,
    234:106,
    235:107,
    236:108,
    237:109,
    238:110,
    239:111,
    240:112,
    241:113,
    242:114,
    243:115,
    244:116,
    245:117,
    246:118,
    247:119,
    248:120,
    249:121,
    250:122,
    251:123,
    252:124,
    253:125,
    254:126,
    255:127
}

dic_cn = {
    1:31,
    2:0,
    3:16,
    4:18,
    5:28,
    6:14,
    7:7,
    8:19,
    9:9,
    10:4,
    11:2,
    12:17,
    13:8,
    14:20,
    15:10,
    16:21,
    17:26,
    18:29,
    19:30,
    20:15,
    21:23,
    22:27,
    23:13,
    24:22,
    25:11,
    26:5,
    27:18,
    28:25,
    29:12,
    30:6,
    31:3,
    32:1
}

dic_co = {
    1:0,
    2:1,
    4:2,
    8:3,
}

if len (sys.argv) > 1:
    str_input = sys.argv[1]
else:
    str_input = input("请输入输出速率(单位MHz):")
f_input = float(str_input)

if (f_input == 0):
    print ("输入无效")
    exit(-1)

list_avalibale=[]

for cox in [1, 2, 4, 8]:
    for cnx in range(1, 32, 1):
        f_tmp = f_input * cnx * cox / 25.0
        cmx = int(f_tmp)

        # 判断CMX的值是否合理
        if ((cmx <= 0) or (cmx >= 255)):
            continue

        # 判断CM和CN的组合是否合理
        if (((cmx*25/cnx) < 640) or ((cmx*25/cnx) > 1500)):
            continue

        # 除去公约数的组合
        cmcn_gcd = math.gcd(cmx, cnx)
        if (((cmx%cmcn_gcd) != 0) or ((cnx%cmcn_gcd) != 0)):
            print("整除公约数错误")
            exit(-1)
        cmx = cmx // cmcn_gcd
        cnx = cnx // cmcn_gcd

        # 排除重复出现过的组合
        is_repet = 0
        for findout in list_avalibale:
            if ((cmx == findout[0]) and ((cnx * cox) == (findout[1] * findout[2]))):
                is_repet = 1
                break
        if (is_repet):
            continue

        list_avalibale.append([cmx, cnx, cox])

print ("可行的组合为:", list_avalibale)

# 找出公差最小的组合
delta = []
for findout in list_avalibale:
    delta.append (abs(f_input - (findout[0] * 25.0 / (findout[1] * findout[2]))))

min_avalibale = list_avalibale[delta.index(min(delta))]
freq_out = (min_avalibale[0] / (min_avalibale[1] * min_avalibale[2])) * 25.0

print("最接近的CM, CN, CO组合为:", min_avalibale)
print("输出速率为:", "{:.2f}".format(freq_out), "MHz")
print("误差为:", "{:.2f}".format(freq_out - f_input), "MHz")
print("A1E1:","0x{:02X}".format((dic_cn[min_avalibale[1]] << 2) | dic_co[min_avalibale[2]]), ", A1E2:","0x{:02X}".format(dic_cm[min_avalibale[0]]))
